name: Publish NuGet package and create GitHub release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup msvc
        uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: x86
      - name: Setup rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          default: true
          profile: minimal
      - name: Test compiling natives explicitly
        shell: cmd
        run: |
          cd native/multiplayer_native
          cargo build --release
      - name: Write log to output
        if: always()
        shell: powershell
        run: |
          echo CMakeError:
          cat D:/a/JKMP.Plugin.Multiplayer/JKMP.Plugin.Multiplayer/native/multiplayer_native/bindings_gen/target/i686-pc-windows-msvc/release/build/libsamplerate-sys-2efb203495d31d88/out/build/CMakeFiles/CMakeError.log
          echo CMakeOutput:
          cat D:/a/JKMP.Plugin.Multiplayer/JKMP.Plugin.Multiplayer/native/multiplayer_native/bindings_gen/target/i686-pc-windows-msvc/release/build/libsamplerate-sys-2efb203495d31d88/out/build/CMakeFiles/CMakeOutput.log
      - name: Restore packages
        run: dotnet restore
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build project
        run: dotnet build --no-restore -c Release
      - name: Run tests
        run: dotnet test --no-build --verbosity normal
      - name: Package project
        run: dotnet pack --no-build -c Release
      - name: Publish package
        run: dotnet nuget push JKMP.Plugin.Multiplayer/bin/Release/*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      - name: Copy content files to temporary directory
        run: |
          mkdir -p out/dist/
          cp -R JKMP.Plugin.Multiplayer/bin/Release/net462/Content/ out/dist/
      - name: Package artifact
        uses: vimtor/action-zip@v1
        with:
          files: >
            JKMP.Plugin.Multiplayer/plugin.json
            JKMP.Plugin.Multiplayer/bin/Release/net462/JKMP.Plugin.Multiplayer.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/Resources.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/Matchmaking.Client.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/Multiplayer.Native.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/multiplayer_native.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/Myra.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/FontStashSharp.MonoGame.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/StbTrueTypeSharp.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/StbImageSharp.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/info.lundin.math.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/System.Memory.dll
            JKMP.Plugin.Multiplayer/bin/Release/net462/System.Runtime.CompilerServices.Unsafe.dll
            out/dist/
          dest: out/JKMP.Plugin.Multiplayer.zip
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Modular release
          artifacts: "out/JKMP.Plugin.Multiplayer.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          generateReleaseNotes: true